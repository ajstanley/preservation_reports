<?php

/**
* Implements hook_theme().
*/
function preservation_reports_theme($existing, $type, $theme, $path) {
  return [
    'preservation_reports_chart' => [
      'variables' => ['chart' => NULL, 'pieheading' => NULL, 'lineheading' => NULL],
    ],
  ];
}

/**
* Default preprocessor function for the preservation_report theme hook.
*/
function template_preprocess_preservation_reports_chart(&$variables) {
  $variables['attributes'] = [
    'id' => ['preservation_reports_charts'],
  ];
}

/**
* Implements hook_page_attachments().
*/
function preservation_reports_page_attachments(array &$attachments) {
  if (\Drupal::routeMatch()->getRouteName() == 'preservation_reports.reports') {
    $attachments['#attached']['library'][] = 'preservation_reports/chartjs';
    $attachments['#attached']['library'][] = 'preservation_reports/preservation_reports';

    // @todo: Add services to get our data, e.g. for this pie chart, query Solr,
    // for this line chart, query Riprap...

    $dataset = new StdClass();
    // For now we use dummy data to render the sample pie chart.
    // $labels = array('image/tiff', 'video/mpeg', 'audio/mpeg');
    // $dataset->data = array(60, 20, 30);

    // Live data from Solr. See https://github.com/mjordan/preservation_reports/issues/2
    // for indexing configurartion.
    $solr_data = preservation_reports_get_mimetypes();
    $labels = array_keys($solr_data);
    $dataset->data = array_values($solr_data);

    $dataset->backgroundColor = array('rgba(255, 99, 132)', 'rgba(54, 162, 235)', 'rgba(255, 206, 86)');
    $pie_chart_data = array(
      'labels' => $labels,
      'datasets' =>  array($dataset),
    );
    $attachments['#attached']['drupalSettings']['preservation_reports']['piechart_data'] = $pie_chart_data;

    // And a dummy line chart.
    $dataset = new StdClass();
    $dataset->label = "Fixity check event failures";
    $dataset->pointBackgroundColor = 'red';
    $dataset->lineTension = 0;
    $dataset->data = array(1, 3, 10, 0, 0, 0 , 0, 0, 2, 0, 0, 0);
    $line_chart_data = array(
      'labels' => array('2017-11', '2017-12', '2018-01', '2018-02', '2018-03', '2018-04', '2018-05', '2018-06', '2018-07', '2018-08', '2018-09', '2018-10'),
      'datasets' => array($dataset),
    );
    $attachments['#attached']['drupalSettings']['preservation_reports']['linechart_data'] = $line_chart_data;
  }
}

/**
 * Queries the local Solr to get the number of MIME types for media.
 *
 * @todo: Use Drupal's Search API for this.
 * @todo: 15 and 16 in the filter query below are the taxonomy term IDs for 'Preservation Master File' and 'Original File'.
 *   Selecting the IDs should be an admin option.
 */
function preservation_reports_get_mimetypes() {
    $solr_query = 'facet.field=ss_field_mime_type&facet=on&q=ss_field_mime_type:*&rows=0';
    // $solr_query = 'facet.field=ss_field_mime_type&facet=on&fq=its_field_media_use:(15+OR+16)&q=ss_field_mime_type:*&rows=0';
    $solr_url = 'http://localhost:8983/solr/CLAW/select?' . $solr_query;
    $response = \Drupal::httpClient()->get($solr_url);
    $response_body = (string) $response->getBody();
    $results = json_decode($response_body, true);
    $facets = $results['facet_counts']['facet_fields']['ss_field_mime_type'];

    // Convert from a flat list of mime types and frequencies to an associative array.
    $output = array();
    $num_facets = count($facets);
    if ($num_facets % 2 == 0) {
      $num_pairs = $num_facets / 2;
      // For every two members of the array (the mimetype and frequency),
      // shift them off the source array and add to $output.
      for ($i = 1; $i <= $num_pairs; $i++) {
        $mime_type = array_shift($facets);
        $count = array_shift($facets);
        $output[$mime_type] = $count;
      }
    }

    return $output;
}
